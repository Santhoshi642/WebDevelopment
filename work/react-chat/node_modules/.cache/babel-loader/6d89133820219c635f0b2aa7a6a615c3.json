{"ast":null,"code":"const convertServiceError = err => Promise.reject(err);\n\nexport const fetchLoginStatus = username => {\n  return fetch('/session', {\n    method: 'GET'\n  }).catch(() => {\n    return Promise.reject({\n      code: 'NETWORK_ERROR'\n    });\n  }).then(response => {\n    if (!response.ok) {\n      return response.json().then(convertServiceError);\n    }\n\n    return response.json();\n  });\n};\nexport const fetchLogin = username => {\n  return fetch('/session', {\n    method: 'POST',\n    headers: new Headers({\n      'content-type': 'application/json'\n    }),\n    body: JSON.stringify({\n      username\n    })\n  }).catch(() => {\n    return Promise.reject({\n      code: 'NETWORK_ERROR'\n    });\n  }).then(response => {\n    if (!response.ok) {\n      return response.json().then(convertServiceError);\n    }\n\n    return response.json();\n  });\n};\nexport const fetchLists = () => {\n  return fetch('/lists', {\n    method: 'GET'\n  }).catch(() => {\n    return Promise.reject({\n      code: 'NETWORK_ERROR'\n    });\n  }).then(response => {\n    if (!response.ok) {\n      return response.json().then(convertServiceError);\n    }\n\n    return response.json();\n  });\n};\nexport const fetchSendMessage = messageText => {\n  return fetch('/message', {\n    method: 'POST',\n    headers: new Headers({\n      'content-type': 'application/json'\n    }),\n    body: JSON.stringify({\n      messageText\n    })\n  }).catch(() => {\n    return Promise.reject({\n      code: 'NETWORK_ERROR'\n    });\n  }).then(response => {\n    if (!response.ok) {\n      return response.json().then(convertServiceError);\n    }\n\n    return response.json();\n  });\n};\nexport const fetchLogout = () => {\n  return fetch('/session', {\n    method: 'DELETE'\n  }).catch(() => {\n    return Promise.reject({\n      code: 'NETWORK_ERROR'\n    });\n  }).then(response => {\n    if (!response.ok) {\n      return response.json().then(convertServiceError);\n    }\n\n    return response.ok;\n  });\n};","map":{"version":3,"sources":["C:/Users/sahanadi/Desktop/class/info6250/student--sahanadarsh/work/react-chat/src/services.js"],"names":["convertServiceError","err","Promise","reject","fetchLoginStatus","username","fetch","method","catch","code","then","response","ok","json","fetchLogin","headers","Headers","body","JSON","stringify","fetchLists","fetchSendMessage","messageText","fetchLogout"],"mappings":"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","sourcesContent":["const convertServiceError = (err) => Promise.reject(err);\r\n\r\nexport const fetchLoginStatus = (username) => {\r\n  return fetch('/session', {\r\n    method: 'GET',\r\n  })\r\n  .catch( () => {\r\n    return Promise.reject({code: 'NETWORK_ERROR'});\r\n  })\r\n  .then( response => {\r\n    if(!response.ok) {\r\n      return response.json().then(convertServiceError);\r\n    }\r\n    return response.json();\r\n  });\r\n};\r\n\r\nexport const fetchLogin = (username) => {\r\n  return fetch('/session', {\r\n    method: 'POST',\r\n    headers: new Headers({\r\n      'content-type': 'application/json',\r\n    }),\r\n    body: JSON.stringify({ username }),\r\n  })\r\n  .catch( () => {\r\n    return Promise.reject({code: 'NETWORK_ERROR'});\r\n  })\r\n  .then( response => {\r\n    if(!response.ok) {\r\n      return response.json().then( convertServiceError );\r\n    }\r\n    return response.json();\r\n  });\r\n};\r\n\r\nexport const fetchLists = () => {\r\n  return fetch('/lists', {\r\n    method: 'GET',\r\n  })\r\n  .catch( () => {\r\n    return Promise.reject({code: 'NETWORK_ERROR'});\r\n  })\r\n  .then( (response) => {\r\n    if(!response.ok) {\r\n      return response.json().then( convertServiceError );\r\n    }\r\n    return response.json();\r\n  });\r\n};\r\n\r\nexport const fetchSendMessage = (messageText) => {\r\n  return fetch('/message', {\r\n    method: 'POST',\r\n    headers: new Headers({\r\n      'content-type': 'application/json',\r\n    }),\r\n    body: JSON.stringify({ messageText }),\r\n  })\r\n  .catch( () => {\r\n    return Promise.reject({code: 'NETWORK_ERROR'});\r\n  })\r\n  .then( (response) => {\r\n    if(!response.ok) {\r\n        return response.json().then( convertServiceError );\r\n    }\r\n    return response.json();\r\n  });\r\n};\r\n\r\nexport const fetchLogout = () => {\r\n  return fetch('/session', {\r\n    method: 'DELETE',\r\n  })\r\n  .catch( () => {\r\n    return Promise.reject({code: 'NETWORK_ERROR'});\r\n  })\r\n  .then( (response) => {\r\n    if(!response.ok) {\r\n      return response.json().then( convertServiceError );\r\n    }\r\n    return response.ok;\r\n  });\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}