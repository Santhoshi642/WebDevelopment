{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahanadi\\\\Desktop\\\\class\\\\info6250\\\\student--sahanadarsh\\\\work\\\\react-chat\\\\src\\\\App.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchLoginStatus, fetchLists } from './services';\nimport errorMessages from './error-messages';\nimport Nav from './Nav';\nimport MessagesUsers from './MessagesUsers';\nimport Login from './Login';\nimport './app.css';\n\nconst App = () => {\n  const [userState, setUserState] = useState({\n    isLoggedIn: false\n  });\n  const [temp, setTemp] = useState(false);\n  const [error, setError] = useState(''); // Runs when first rendered\n  // AND whenever any vars in the passed array change\n  // (None in this case)\n\n  useEffect(() => {\n    fetchLoginStatus().then(userInfo => {\n      fetchLists().then(usersMessagesList => {\n        setUserState({\n          isLoggedIn: true,\n          username: userInfo.username,\n          messages: usersMessagesList.messagesList,\n          users: usersMessagesList.usersList\n        });\n      }).catch(err => {\n        setError(errorMessages[err.code || 'DEFAULT']);\n      });\n    });\n  }, [temp]);\n\n  const login = (username, messages, users) => {\n    setUserState({\n      isLoggedIn: true,\n      username,\n      messages,\n      users\n    });\n  };\n\n  const reload = messages => {\n    console.log(\"----------reload------\");\n    setUserState({ ...userState,\n      messages\n    });\n  };\n\n  const logout = () => {\n    setUserState({\n      isLoggedIn: false\n    });\n  };\n\n  let content;\n\n  if (userState.isLoggedIn) {\n    content = /*#__PURE__*/React.createElement(MessagesUsers, {\n      user: userState,\n      onReload: reload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    });\n  } else {\n    content = /*#__PURE__*/React.createElement(Login, {\n      onLogin: login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \" Chat App \"), /*#__PURE__*/React.createElement(Nav, {\n    user: userState,\n    onLogout: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), content);\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/sahanadi/Desktop/class/info6250/student--sahanadarsh/work/react-chat/src/App.jsx"],"names":["React","useState","useEffect","fetchLoginStatus","fetchLists","errorMessages","Nav","MessagesUsers","Login","App","userState","setUserState","isLoggedIn","temp","setTemp","error","setError","then","userInfo","usersMessagesList","username","messages","messagesList","users","usersList","catch","err","code","login","reload","console","log","logout","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC;AAAEW,IAAAA,UAAU,EAAE;AAAd,GAAD,CAA1C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC,CAHgB,CAKhB;AACA;AACA;;AACAC,EAAAA,SAAS,CAAE,MAAM;AACfC,IAAAA,gBAAgB,GACfc,IADD,CACOC,QAAQ,IAAI;AACjBd,MAAAA,UAAU,GACTa,IADD,CACQE,iBAAD,IAAuB;AAC5BR,QAAAA,YAAY,CAAC;AACXC,UAAAA,UAAU,EAAE,IADD;AAEXQ,UAAAA,QAAQ,EAAEF,QAAQ,CAACE,QAFR;AAGXC,UAAAA,QAAQ,EAAEF,iBAAiB,CAACG,YAHjB;AAIXC,UAAAA,KAAK,EAAEJ,iBAAiB,CAACK;AAJd,SAAD,CAAZ;AAMD,OARD,EASCC,KATD,CASSC,GAAD,IAAS;AACfV,QAAAA,QAAQ,CAACX,aAAa,CAACqB,GAAG,CAACC,IAAJ,IAAY,SAAb,CAAd,CAAR;AACD,OAXD;AAYD,KAdD;AAeD,GAhBQ,EAgBN,CAACd,IAAD,CAhBM,CAAT;;AAkBA,QAAMe,KAAK,GAAG,CAACR,QAAD,EAAWC,QAAX,EAAqBE,KAArB,KAA+B;AAC3CZ,IAAAA,YAAY,CAAC;AACXC,MAAAA,UAAU,EAAE,IADD;AAEXQ,MAAAA,QAFW;AAGXC,MAAAA,QAHW;AAIXE,MAAAA;AAJW,KAAD,CAAZ;AAMD,GAPD;;AASA,QAAMM,MAAM,GAAIR,QAAD,IAAc;AAC3BS,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACApB,IAAAA,YAAY,CAAC,EACX,GAAGD,SADQ;AAEXW,MAAAA;AAFW,KAAD,CAAZ;AAID,GAND;;AAQA,QAAMW,MAAM,GAAG,MAAM;AACnBrB,IAAAA,YAAY,CAAC;AACXC,MAAAA,UAAU,EAAE;AADD,KAAD,CAAZ;AAGD,GAJD;;AAMA,MAAIqB,OAAJ;;AAEA,MAAGvB,SAAS,CAACE,UAAb,EAAyB;AACvBqB,IAAAA,OAAO,gBAAG,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAEvB,SAArB;AAAgC,MAAA,QAAQ,EAAEmB,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD,GAFD,MAEO;AACLI,IAAAA,OAAO,gBAAG,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAGL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAElB,SAAX;AAAsB,IAAA,QAAQ,EAAEsB,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGC,OAHH,CADF;AAOD,CAhED;;AAkEA,eAAexB,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport { fetchLoginStatus, fetchLists } from './services';\r\nimport errorMessages from './error-messages';\r\n\r\nimport Nav from './Nav';\r\nimport MessagesUsers from './MessagesUsers';\r\nimport Login from './Login';\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n  const [userState, setUserState] = useState({ isLoggedIn: false });\r\n  const [temp, setTemp] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  // Runs when first rendered\r\n  // AND whenever any vars in the passed array change\r\n  // (None in this case)\r\n  useEffect( () => {\r\n    fetchLoginStatus()\r\n    .then( userInfo => {\r\n      fetchLists()\r\n      .then( (usersMessagesList) => {\r\n        setUserState({\r\n          isLoggedIn: true,\r\n          username: userInfo.username,\r\n          messages: usersMessagesList.messagesList,\r\n          users: usersMessagesList.usersList,\r\n        });\r\n      })\r\n      .catch( (err) => {\r\n        setError(errorMessages[err.code || 'DEFAULT']);\r\n      });\r\n    });\r\n  }, [temp]);\r\n\r\n  const login = (username, messages, users) => {\r\n    setUserState({\r\n      isLoggedIn: true,\r\n      username,\r\n      messages,\r\n      users\r\n    });\r\n  };\r\n\r\n  const reload = (messages) => {\r\n    console.log(\"----------reload------\");\r\n    setUserState({\r\n      ...userState,\r\n      messages\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    setUserState({\r\n      isLoggedIn: false\r\n    });\r\n  };\r\n\r\n  let content;\r\n\r\n  if(userState.isLoggedIn) {\r\n    content = <MessagesUsers user={userState} onReload={reload}/>;\r\n  } else {\r\n    content = <Login onLogin={ login }/>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <p className=\"heading\"> Chat App </p>\r\n      <Nav user={userState} onLogout={logout}/>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}