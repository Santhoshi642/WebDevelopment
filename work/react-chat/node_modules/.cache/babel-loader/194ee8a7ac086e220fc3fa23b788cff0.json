{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahanadi\\\\Desktop\\\\class\\\\info6250\\\\student--sahanadarsh\\\\work\\\\react-chat\\\\src\\\\SendMessage.jsx\";\nimport React from 'react';\nimport errorMessages from './error-messages';\nimport spinner from \"./spinner.svg\";\nimport { fetchSendMessage } from './services';\n\nconst SendMessage = () => {\n  const [message, setMessage] = useState(''); //   const [isLoading, setIsLoading] = useState(false);\n\n  const [error, setError] = useState('');\n\n  const performAction = () => {\n    if (!message) {\n      setError(errorMessages.USERNAME_REQUIRED);\n      return;\n    } // set output for while we wait\n\n\n    setError(''); // setIsLoading(true);\n    // start service call\n\n    fetchSendMessage(message).then(messageInfo => {\n      onLogin(messageInfo.message); // inform parent\n    }).catch(err => {\n      setError(errorMessages[err.code || 'DEFAULT']);\n      setIsLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"send-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, error), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setMessage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: performAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Send Message\")); // return (\n  //     <div>\n  //         <input className=\"to-send\" placeholder=\"Enter message to send\"/>\n  //         <button className=\"send-button\">Send</button>\n  //     </div>\n  // )\n};\n\nexport default SendMessage;","map":{"version":3,"sources":["C:/Users/sahanadi/Desktop/class/info6250/student--sahanadarsh/work/react-chat/src/SendMessage.jsx"],"names":["React","errorMessages","fetchSendMessage","SendMessage","message","setMessage","useState","error","setError","performAction","USERNAME_REQUIRED","then","messageInfo","onLogin","catch","err","code","setIsLoading","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;AAEA,SAASC,gBAAT,QAAiC,YAAjC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAExB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,EAAD,CAAtC,CAFwB,CAG1B;;AACE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMG,aAAa,GAAG,MAAM;AAC1B,QAAG,CAACL,OAAJ,EAAa;AACXI,MAAAA,QAAQ,CAACP,aAAa,CAACS,iBAAf,CAAR;AACA;AACD,KAJyB,CAK1B;;;AACAF,IAAAA,QAAQ,CAAC,EAAD,CAAR,CAN0B,CAO1B;AACA;;AACAN,IAAAA,gBAAgB,CAACE,OAAD,CAAhB,CACCO,IADD,CACQC,WAAD,IAAiB;AACtBC,MAAAA,OAAO,CAACD,WAAW,CAACR,OAAb,CAAP,CADsB,CACQ;AAC/B,KAHD,EAICU,KAJD,CAISC,GAAD,IAAS;AACfP,MAAAA,QAAQ,CAACP,aAAa,CAACc,GAAG,CAACC,IAAJ,IAAY,SAAb,CAAd,CAAR;AACAC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAPD;AAQD,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBV,KAAtB,CADF,eAEE;AAAO,IAAA,QAAQ,EAAIW,CAAD,IAAOb,UAAU,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAKM;AAAQ,IAAA,OAAO,EAAGX,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALN,CADF,CAzBwB,CAoCtB;AACA;AACA;AACA;AACA;AACA;AACH,CA1CD;;AA2CA,eAAeN,WAAf","sourcesContent":["import React from 'react';\r\nimport errorMessages from './error-messages';\r\nimport spinner from './spinner.svg';\r\nimport { fetchSendMessage } from './services';\r\n\r\nconst SendMessage = () => {\r\n\r\n  const [message, setMessage] = useState('');\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const performAction = () => {\r\n    if(!message) {\r\n      setError(errorMessages.USERNAME_REQUIRED);\r\n      return;\r\n    }\r\n    // set output for while we wait\r\n    setError('');\r\n    // setIsLoading(true);\r\n    // start service call\r\n    fetchSendMessage(message)\r\n    .then( (messageInfo) => {\r\n      onLogin(messageInfo.message); // inform parent\r\n    })\r\n    .catch( (err) => {\r\n      setError(errorMessages[err.code || 'DEFAULT']);\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"send-message\">\r\n      <p className=\"error\">{error}</p>\r\n      <input onChange={ (e) => setMessage(e.target.value) }/>\r\n      {/* { isLoading ? */}\r\n          {/* <img alt=\"spinner\" src={spinner}/> : */}\r\n          <button onClick={ performAction }>Send Message</button>\r\n      {/* } */}\r\n    </div>\r\n  );\r\n\r\n    // return (\r\n    //     <div>\r\n    //         <input className=\"to-send\" placeholder=\"Enter message to send\"/>\r\n    //         <button className=\"send-button\">Send</button>\r\n    //     </div>\r\n    // )\r\n}\r\nexport default SendMessage\r\n"]},"metadata":{},"sourceType":"module"}