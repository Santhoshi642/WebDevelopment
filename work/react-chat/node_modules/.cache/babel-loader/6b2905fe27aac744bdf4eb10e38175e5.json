{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sahanadi\\\\Desktop\\\\class\\\\info6250\\\\student--sahanadarsh\\\\work\\\\react-chat\\\\src\\\\App.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchLoginStatus, fetchLists } from './services';\nimport errorMessages from './error-messages';\nimport Logout from './Logout';\nimport MessagesUsers from './MessagesUsers';\nimport Login from './Login';\nimport './app.css';\n\nconst App = () => {\n  const [userState, setUserState] = useState({\n    isLoggedIn: false\n  });\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchLoginStatus().then(userInfo => {\n      fetchLists().then(usersMessagesList => {\n        setUserState({\n          isLoggedIn: true,\n          username: userInfo.username,\n          messages: usersMessagesList.messagesList,\n          users: usersMessagesList.usersList\n        });\n      }).catch(err => {\n        setError(errorMessages[err.code || 'DEFAULT']);\n      });\n    });\n  }, [userState.messages, userState.users]);\n\n  const login = (username, messages, users) => {\n    setUserState({\n      isLoggedIn: true,\n      username,\n      messages,\n      users\n    });\n  };\n\n  const reload = messages => {\n    setUserState({ ...userState,\n      messages\n    });\n  };\n\n  const logout = () => {\n    setUserState({\n      isLoggedIn: false\n    });\n  };\n\n  let content;\n\n  if (userState.isLoggedIn) {\n    content = /*#__PURE__*/React.createElement(MessagesUsers, {\n      user: userState,\n      onReload: reload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    });\n  } else {\n    setError('');\n    content = /*#__PURE__*/React.createElement(Login, {\n      onLogin: login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \" Chat App \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, error), /*#__PURE__*/React.createElement(Logout, {\n    user: userState,\n    onLogout: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), content);\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/sahanadi/Desktop/class/info6250/student--sahanadarsh/work/react-chat/src/App.jsx"],"names":["React","useState","useEffect","fetchLoginStatus","fetchLists","errorMessages","Logout","MessagesUsers","Login","App","userState","setUserState","isLoggedIn","error","setError","then","userInfo","usersMessagesList","username","messages","messagesList","users","usersList","catch","err","code","login","reload","logout","content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport { fetchLoginStatus, fetchLists } from './services';\r\nimport errorMessages from './error-messages';\r\n\r\nimport Logout from './Logout';\r\nimport MessagesUsers from './MessagesUsers';\r\nimport Login from './Login';\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n  const [userState, setUserState] = useState({ isLoggedIn: false });\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect( () => {\r\n    fetchLoginStatus()\r\n    .then( userInfo => {\r\n      fetchLists()\r\n      .then( (usersMessagesList) => {\r\n        setUserState({\r\n          isLoggedIn: true,\r\n          username: userInfo.username,\r\n          messages: usersMessagesList.messagesList,\r\n          users: usersMessagesList.usersList,\r\n        });\r\n      })\r\n      .catch( (err) => {\r\n        setError(errorMessages[err.code || 'DEFAULT']);\r\n      });\r\n    });\r\n  }, [userState.messages, userState.users]);\r\n\r\n  const login = (username, messages, users) => {\r\n    setUserState({\r\n      isLoggedIn: true,\r\n      username,\r\n      messages,\r\n      users\r\n    });\r\n  };\r\n\r\n  const reload = (messages) => {\r\n    setUserState({\r\n      ...userState,\r\n      messages\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    setUserState({\r\n      isLoggedIn: false\r\n    });\r\n  };\r\n\r\n  let content;\r\n\r\n  if(userState.isLoggedIn) {\r\n    content = <MessagesUsers user={userState} onReload={reload}/>;\r\n  } else {\r\n    setError('');\r\n    content = <Login onLogin={ login }/>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <p className=\"heading\"> Chat App </p>\r\n      <p className=\"error\">{error}</p>\r\n      <Logout user={userState} onLogout={logout}/>\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}